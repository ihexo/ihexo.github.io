[{"title":"Kotlin","date":"2017-06-23T12:13:26.000Z","path":"2017/06/23/Kotlin/","text":"项目地址：https://github.com/JetBrains/kotlin 简介：Kotlin是一种在Java虚拟机上运行的静态类型编程语言，它也可以被编译成为JavaScript源代码。它主要是由俄罗斯圣彼得堡的JetBrains开发团队所发展出来的编程语言，其名称来自于圣彼得堡附近的科特林岛。[2]2012年1月，著名期刊《Dr. Dobb’s Journal（英语：Dr. Dobb’s Journal）》中Kotlin被认定为该月的最佳语言。[3]虽然与Java语法并不兼容，但Kotlin被设计成可以和Java代码相互运作，并可以重复使用如Java集合框架等的现有Java类库。 更多：The Kotlin Programming Language http://kotlinlang.org/ Kotlin Programming LanguageWelcome to Kotlin! Some handy links: Kotlin Site Getting Started Guide Try Kotlin Kotlin Standard Library Issue Tracker Forum Kotlin Blog Follow Kotlin on Twitter Public Slack channel TeamCity CI build Editing Kotlin Kotlin IntelliJ IDEA Plugin Kotlin Eclipse Plugin Kotlin TextMate Bundle Build environment requirementsIn order to build Kotlin distribution you need to have: Apache Ant 1.9.4 and higher JDK 1.6, 1.7 and 1.8 Setup environment variables as following: JAVA_HOME=&quot;path to JDK 1.8&quot; JDK_16=&quot;path to JDK 1.6&quot; JDK_17=&quot;path to JDK 1.7&quot; JDK_18=&quot;path to JDK 1.8&quot; BuildingTo build this project, first time you try to build you need to run this: ant -f update_dependencies.xml which will setup the dependencies on intellij-core is a part of command line compiler and contains only necessary APIs. idea-full is a full blown IntelliJ IDEA Community Edition to be used in the plugin module. Then, you need to run ant -f build.xml which will build the binaries of the compiler and put them into the dist directory. You may need to increase the heap size for Ant usingANT_OPTS. OPTIONAL: Maven artifact distribution is built separately, go into libraries directory after building the compiler and run: ./gradlew build install mvn install Note: on Windows type gradlew without the leading ./ Refer to libraries/ReadMe.md for details. Working with the project in IntelliJ IDEAThe root kotlin project already has an IntelliJ IDEA project, you can just open it in IntelliJ IDEA. You may need to set the Project SDK (File -&gt; Project Structure -&gt; Project).You may also need to add tools.jar to your SDK: File -&gt; Project Structure -&gt; SDKs -&gt; &lt;Your JDK&gt; -&gt; Classpath then choose the tools.jar in the JDK’s lib directory. If you are not dealing with Android, you may need to disable the Android Plugin in order to compile the project. Installing the latest Kotlin pluginSince Kotlin project contains code written in Kotlin itself, you will also need a Kotlin plugin to build the project in IntelliJ IDEA. You probably want to have locally the same version of plugin that build server is using for building.As this version is constantly moving, the best way to always be updated is to let IntelliJ IDEA notify you when it is time to renew your plugin. To keep the plugin version in sync with the rest of the team and our Continuous Integration serveryou should setup IDEA to update the plugin directly from the build server. Open: Preferences -&gt; Plugins -&gt; Browse Repositories -&gt; Manage Repositories... and add the following URL to your repositories: https://teamcity.jetbrains.com/guestAuth/repository/download/bt345/bootstrap.tcbuildtag/updatePlugins.xml Then update the list of plugins in “Browse Repositories”, you’ll see two versions of Kotlin there, install the one with the higher version number. If you want to keep an IntelliJ IDEA installation with that bleeding edge Kotlin plugin for working Kotlin project sources only separate to your default IntelliJ IDEA installation with the stable Kotlinplugin see this document, which describes how to have multiple IntelliJ IDEA installations using different configurations and plugin directories. Compiling and runningFrom this root project there are Run/Debug Configurations for running IDEA or the Compiler Tests for example; so if you want to try out the latest and greatest IDEA plugin VCS -&gt; Git -&gt; Pull Run IntelliJ IDEA a child IntelliJ IDEA with the Kotlin plugin will then startup you can now open the kotlin libraries project to then work with the various kotlin libraries etc. ContributingWe love contributions! There’s lots to do on Kotlin and on thestandard library) so why not chat with usabout what you’re interested in doing? Please join the #kontributors channel in our Slack chatand let us know about your plans. If you want to find some issues to start off with, try this query which should find all Kotlin issues that marked as “up-for-grabs”. Currently only committers can assign issues to themselves so just add a comment if you’re starting work on it. A nice gentle way to contribute would be to review the standard library docsand find classes or functions which are not documented very well and submit a patch. In particular it’d be great if all functions included a nice example of how to use it such as for thehashMapOf() function.This is implemented using the @samplemacro to include code from a test function. The benefits of this approach are twofold; First, the API’s documentation is improved via beneficial examples that help new users and second, the code coverage is increased. Also the JavaScript translation could really use your help. See the JavaScript contribution section for more details. If you want to work on the compilerThe Kotlin compiler is written in Java and Kotlin (we gradually migrate more and more of it to pure Kotlin). So the easiest way to work on the compiler or IntelliJ IDEA plugin is download a recent IntelliJ IDEA, Community edition is enough install the Kotlin plugin open the root kotlin project in IDEA (opening the kotlin directory) You can now run the various Run/Debug Configurations such as IDEA All Compiler Tests All IDEA Plugin Tests If you want to work on the Kotlin libraries download a recent IntelliJ IDEA, Community edition is enough install the Kotlin plugin open the kotlin libraries project Then build via cd libraries ./gradlew build install mvn install Note: on Windows type gradlew without the leading ./ Some of the code in the standard library is created by generating code from templates. See the README in the stdlib section for how run the code generator. The existing templates can be used as examples for creating new ones. Submitting patchesThe best way to submit a patch is to fork the project on github then send us apull request via github. If you create your own fork, it might help to enable rebase by defaultwhen you pull by executing1git config --global pull.rebase true This will avoid your local repo having too many merge commitswhich will help keep your pull request simple and easy to apply. Commit commentsIf you include in your comment this text (where KT-1234 is the Issue ID in the Issue Tracker, the issue will get automatically marked as fixed. #KT-1234 Fixed 如果你有兴趣加入我们，请直接关注公众号 Kotlinandroid ，或者加 QQ 群：465280882","tags":[{"name":"Kotlin","slug":"Kotlin","permalink":"https://kotlinandroid.net/tags/Kotlin/"}]}]